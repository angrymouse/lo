#pragma once
// [do not edit,<auto-generated />]
// This file has been automatically generated, please do not change unless you disable auto-generation in the Makefile

#include "spin.h"

extern char _binary_main_js_start[];
extern char _binary_main_js_end[];
extern char _binary_lib_gen_js_start[];
extern char _binary_lib_gen_js_end[];
extern char _binary_lib_system_js_start[];
extern char _binary_lib_system_js_end[];
extern char _binary_lib_fast_js_start[];
extern char _binary_lib_fast_js_end[];
extern char _binary_lib_asm_js_start[];
extern char _binary_lib_asm_js_end[];
extern char _binary_lib_bench_js_start[];
extern char _binary_lib_bench_js_end[];
extern char _binary_lib_net_js_start[];
extern char _binary_lib_net_js_end[];
extern char _binary_lib_loop_js_start[];
extern char _binary_lib_loop_js_end[];
extern char _binary_lib_pico_js_start[];
extern char _binary_lib_pico_js_end[];
extern char _binary_lib_timer_js_start[];
extern char _binary_lib_timer_js_end[];
extern char _binary_lib_binary_js_start[];
extern char _binary_lib_binary_js_end[];
extern char _binary_lib_acorn_js_start[];
extern char _binary_lib_acorn_js_end[];
extern char _binary_lib_path_js_start[];
extern char _binary_lib_path_js_end[];
extern char _binary_lib_thread_js_start[];
extern char _binary_lib_thread_js_end[];
extern char _binary_lib_fs_js_start[];
extern char _binary_lib_fs_js_end[];
extern char _binary_lib_websocket_js_start[];
extern char _binary_lib_websocket_js_end[];
extern char _binary_lib_compat_js_start[];
extern char _binary_lib_compat_js_end[];
extern char _binary_Makefile_start[];
extern char _binary_Makefile_end[];
extern char _binary_main_cc_start[];
extern char _binary_main_cc_end[];
extern char _binary_main_h_start[];
extern char _binary_main_h_end[];
extern char _binary_spin_cc_start[];
extern char _binary_spin_cc_end[];
extern char _binary_spin_h_start[];
extern char _binary_spin_h_end[];
extern char _binary_bindings_encode_encode_js_start[];
extern char _binary_bindings_encode_encode_js_end[];
extern char _binary_bindings_epoll_epoll_js_start[];
extern char _binary_bindings_epoll_epoll_js_end[];
extern char _binary_bindings_fast_fast_js_start[];
extern char _binary_bindings_fast_fast_js_end[];
extern char _binary_bindings_fs_fs_js_start[];
extern char _binary_bindings_fs_fs_js_end[];
extern char _binary_bindings_load_load_js_start[];
extern char _binary_bindings_load_load_js_end[];
extern char _binary_bindings_net_net_js_start[];
extern char _binary_bindings_net_net_js_end[];
extern char _binary_bindings_pico_pico_js_start[];
extern char _binary_bindings_pico_pico_js_end[];
extern char _binary_bindings_spin_spin_js_start[];
extern char _binary_bindings_spin_spin_js_end[];
extern char _binary_bindings_system_system_js_start[];
extern char _binary_bindings_system_system_js_end[];
extern char _binary_bindings_thread_thread_js_start[];
extern char _binary_bindings_thread_thread_js_end[];

extern "C" {
  extern void* _register_load();
  extern void* _register_fs();
  extern void* _register_system();
  extern void* _register_fast();
  extern void* _register_spin();
  extern void* _register_thread();
  extern void* _register_net();
  extern void* _register_epoll();
  extern void* _register_pico();
  extern void* _register_encode();
}

void register_builtins() {
  spin::builtins_add("main.js", _binary_main_js_start, _binary_main_js_end - _binary_main_js_start);
  spin::builtins_add("lib/gen.js", _binary_lib_gen_js_start, _binary_lib_gen_js_end - _binary_lib_gen_js_start);
  spin::builtins_add("lib/system.js", _binary_lib_system_js_start, _binary_lib_system_js_end - _binary_lib_system_js_start);
  spin::builtins_add("lib/fast.js", _binary_lib_fast_js_start, _binary_lib_fast_js_end - _binary_lib_fast_js_start);
  spin::builtins_add("lib/asm.js", _binary_lib_asm_js_start, _binary_lib_asm_js_end - _binary_lib_asm_js_start);
  spin::builtins_add("lib/bench.js", _binary_lib_bench_js_start, _binary_lib_bench_js_end - _binary_lib_bench_js_start);
  spin::builtins_add("lib/net.js", _binary_lib_net_js_start, _binary_lib_net_js_end - _binary_lib_net_js_start);
  spin::builtins_add("lib/loop.js", _binary_lib_loop_js_start, _binary_lib_loop_js_end - _binary_lib_loop_js_start);
  spin::builtins_add("lib/pico.js", _binary_lib_pico_js_start, _binary_lib_pico_js_end - _binary_lib_pico_js_start);
  spin::builtins_add("lib/timer.js", _binary_lib_timer_js_start, _binary_lib_timer_js_end - _binary_lib_timer_js_start);
  spin::builtins_add("lib/binary.js", _binary_lib_binary_js_start, _binary_lib_binary_js_end - _binary_lib_binary_js_start);
  spin::builtins_add("lib/acorn.js", _binary_lib_acorn_js_start, _binary_lib_acorn_js_end - _binary_lib_acorn_js_start);
  spin::builtins_add("lib/path.js", _binary_lib_path_js_start, _binary_lib_path_js_end - _binary_lib_path_js_start);
  spin::builtins_add("lib/thread.js", _binary_lib_thread_js_start, _binary_lib_thread_js_end - _binary_lib_thread_js_start);
  spin::builtins_add("lib/fs.js", _binary_lib_fs_js_start, _binary_lib_fs_js_end - _binary_lib_fs_js_start);
  spin::builtins_add("lib/websocket.js", _binary_lib_websocket_js_start, _binary_lib_websocket_js_end - _binary_lib_websocket_js_start);
  spin::builtins_add("lib/compat.js", _binary_lib_compat_js_start, _binary_lib_compat_js_end - _binary_lib_compat_js_start);
  spin::builtins_add("Makefile", _binary_Makefile_start, _binary_Makefile_end - _binary_Makefile_start);
  spin::builtins_add("main.cc", _binary_main_cc_start, _binary_main_cc_end - _binary_main_cc_start);
  spin::builtins_add("main.h", _binary_main_h_start, _binary_main_h_end - _binary_main_h_start);
  spin::builtins_add("spin.cc", _binary_spin_cc_start, _binary_spin_cc_end - _binary_spin_cc_start);
  spin::builtins_add("spin.h", _binary_spin_h_start, _binary_spin_h_end - _binary_spin_h_start);
  spin::builtins_add("bindings/encode/encode.js", _binary_bindings_encode_encode_js_start, _binary_bindings_encode_encode_js_end - _binary_bindings_encode_encode_js_start);
  spin::builtins_add("bindings/epoll/epoll.js", _binary_bindings_epoll_epoll_js_start, _binary_bindings_epoll_epoll_js_end - _binary_bindings_epoll_epoll_js_start);
  spin::builtins_add("bindings/fast/fast.js", _binary_bindings_fast_fast_js_start, _binary_bindings_fast_fast_js_end - _binary_bindings_fast_fast_js_start);
  spin::builtins_add("bindings/fs/fs.js", _binary_bindings_fs_fs_js_start, _binary_bindings_fs_fs_js_end - _binary_bindings_fs_fs_js_start);
  spin::builtins_add("bindings/load/load.js", _binary_bindings_load_load_js_start, _binary_bindings_load_load_js_end - _binary_bindings_load_load_js_start);
  spin::builtins_add("bindings/net/net.js", _binary_bindings_net_net_js_start, _binary_bindings_net_net_js_end - _binary_bindings_net_net_js_start);
  spin::builtins_add("bindings/pico/pico.js", _binary_bindings_pico_pico_js_start, _binary_bindings_pico_pico_js_end - _binary_bindings_pico_pico_js_start);
  spin::builtins_add("bindings/spin/spin.js", _binary_bindings_spin_spin_js_start, _binary_bindings_spin_spin_js_end - _binary_bindings_spin_spin_js_start);
  spin::builtins_add("bindings/system/system.js", _binary_bindings_system_system_js_start, _binary_bindings_system_system_js_end - _binary_bindings_system_system_js_start);
  spin::builtins_add("bindings/thread/thread.js", _binary_bindings_thread_thread_js_start, _binary_bindings_thread_thread_js_end - _binary_bindings_thread_thread_js_start);
  spin::modules_add("load", &_register_load);
  spin::modules_add("fs", &_register_fs);
  spin::modules_add("system", &_register_system);
  spin::modules_add("fast", &_register_fast);
  spin::modules_add("spin", &_register_spin);
  spin::modules_add("thread", &_register_thread);
  spin::modules_add("net", &_register_net);
  spin::modules_add("epoll", &_register_epoll);
  spin::modules_add("pico", &_register_pico);
  spin::modules_add("encode", &_register_encode);
}

static unsigned int main_js_len = _binary_main_js_end - _binary_main_js_start;
static const char* main_js = _binary_main_js_start;
static const char* v8flags = "--stack-trace-limit=10 --use-strict --turbo-fast-api-calls --no-freeze-flags-after-init";
static unsigned int _v8flags_from_commandline = 1;
static unsigned int _v8_threads = 2;
static unsigned int _v8_cleanup = 0;
static unsigned int _on_exit = 0;

